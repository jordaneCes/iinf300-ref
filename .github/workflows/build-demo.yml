name: CI/CD

on:
  push:
    branches: ['main']
    
jobs:
  push_to_registries:
    name: Push Docker image to single registry
    runs-on: ubuntu-latest
    needs: [lint_python, hadolint]
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: harbor.kakor.ovh
          username: ipi
          password: ${{ secrets.password_harbor }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: harbor.kakor.ovh/ipi/groupe-3
          tags: toto 
  
      - name: Build and push Docker images
        id: push
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: ./docker/
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          
  lint_python:
    name: Lint Python Code
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Black
        run: pip install black

      - name: Run Black to auto-format the code
        run: black .
      
      - name: Python Linter
        uses: sunnysid3up/python-linter@master
        with:
            source: "docker/app"
            mypy-options: "--ignore-missing-imports --show-error-codes"
            isort-options: "-w 100"
            pylint-options: "--disable=F0010"
            
  hadolint:
    name: Hadolint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: docker/Dockerfile

  test_curl:
    name: On test !
    runs-on: ubuntu-latest
    needs: push_to_registries
    steps:
      - uses: actions/checkout@v4
      - name: Run the build process with Docker
        run: docker run -d -p 5000:5000 --name nginx harbor.kakor.ovh/ipi/groupe-3:toto
      - name: test curl
        run: sleep 10 && curl --header "Content-Type:application/json" http://localhost:5000/librairie/livres -d '{"titre":"DevSecOps DEAVSETS", "auteur":"Jordan Assouline"}'
